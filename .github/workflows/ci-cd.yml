name: CI/CD

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  CACHE_NAME: npm-deps-${{ github.sha }}
  PUBLIC_URL: /Yemen_Market_Analysis

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.npm
            ~/.cache
          key: ${{ env.CACHE_NAME }}
          restore-keys: |
            npm-deps-

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test -- --passWithNoTests --coverage
        env:
          CI: true

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: test-coverage
          path: coverage/
          retention-days: 5

  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          CI: true
          NODE_ENV: production
          PUBLIC_URL: ${{ env.PUBLIC_URL }}

      - name: Verify Build
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory is missing!"
            exit 1
          fi

      - name: Verify Data Files
        run: |
          echo "Verifying data files..."
          if [ ! -d "build/data" ]; then
            echo "Data directory is missing!"
            exit 1
          fi

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          force_orphan: true
          commit_message: |
            Deploy to GitHub Pages
            
            Commit: ${{ github.sha }}
            Workflow: ${{ github.workflow }}
          enable_jekyll: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Verify Deployment
        run: |
          DEPLOY_URL="https://mohammadak95.github.io/Yemen_Market_Analysis"
          echo "Deployed to: $DEPLOY_URL"
          
          # Wait for a few seconds to allow deployment to propagate
          sleep 10
          
          # Check if the site is accessible
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" $DEPLOY_URL || echo "failed")
          
          if [ "$STATUS_CODE" = "200" ] || [ "$STATUS_CODE" = "301" ] || [ "$STATUS_CODE" = "302" ]; then
            echo "Deployment verified successfully!"
          else
            echo "Deployment verification failed with status code: $STATUS_CODE"
            # Don't fail the build as the site might still be propagating
            echo "Note: The site might need a few minutes to be fully accessible"
          fi

  cleanup:
    needs: [deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Delete workflow artifacts
        uses: geekyeggo/delete-artifact@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: |
            build-output
            test-coverage
          failOnError: false